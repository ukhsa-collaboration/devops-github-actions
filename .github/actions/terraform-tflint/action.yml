name: "[Analysis] Run a TFLint scan against Terraform code"
description: "Run TFLint to lint Terraform code"
inputs:
  scan_directory:
    description: "The directory to run the TFLint scan in"
    default: "."
    required: false
  download_tflint:
    description: "Whether to download and install TFLint if it's not already available"
    default: true
    required: false

runs:
  using: "composite"
  steps:
    - name: Check if TFLint is already installed
      id: install_check
      shell: bash
      run: |
        if [[ $(which tflint) ]]; then
          echo "tflint_installed=True" >> $GITHUB_OUTPUT
        else
          echo "tflint_installed=False" >> $GITHUB_OUTPUT
        fi

    - name: Download and install TFLint
      if: ${{ steps.install_check.outputs.tflint_installed == 'False' && inputs.download_tflint == 'true' }}
      shell: bash
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check if .tflint.hcl exists
        id: tflint_hcl_check
        shell: bash
        run: |
          if [ -f ".tflint.hcl" ]; then
            echo "tflint_hcl_exists=True" >> $GITHUB_ENV
          else
            echo "tflint_hcl_exists=False" >> $GITHUB_ENV
          fi

    - name: Create .tflint.hcl if it does not exist
        if: ${{ steps.install_check.outputs.tflint_installed == 'False' }}
        shell: bash
        run: |
          cat << EOF > .tflint.hcl
            plugin "aws" {
              enabled = true
              version = "0.32.0"
              source  = "github.com/terraform-linters/tflint-ruleset-aws"
            }

            plugin "azurerm" {
              enabled = true
              version = "0.26.0"
              source  = "github.com/terraform-linters/tflint-ruleset-azurerm"
            }
          EOF

    - name: Initialize TFLint
      if: ${{ steps.install_check.outputs.tflint_installed == 'False' }}
      shell: bash
      run: tflint init

    - name: Run TFLint
      shell: bash
      env:
        SCAN_DIRECTORY: ${{ inputs.scan_directory }}
      run: |
        tflint --recursive "$SCAN_DIRECTORY"
